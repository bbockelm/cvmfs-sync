#!/bin/sh

pub_failed=1
query_failed=1
authz_location=$PWD/ligo_authz

function finish_txn {
  if [ $pub_failed -eq 1 ]; then
    cvmfs_server abort -f
    exit 1
  elif [ $query_failed -eq 1 ]; then
    cvmfs_server publish -F $authz_location -X ligo.osgstorage.org
    exit 2
  else
    exec cvmfs_server publish -F $authz_location -X ligo.osgstorage.org
  fi
}

echo "Starting LIGO frame data update at `date`"

if `voms-proxy-info --exists --valid 1:0`; then
  voms-proxy-info -all
  echo "Valid proxy!"
  # Proxy is valid but VOMS extension is about to expire.
  if [ `voms-proxy-info -actimeleft` -lt 3600 ]; then
    echo "Generating new VOMS extensions."
    voms-proxy-init -voms osg:/osg/ligo -rfc -valid 168:00 -noregen
  fi
else
  echo "Proxy has expired."
  exit 1
fi

# Generate a new authz list which we will use for publication
if `./ligo-auth-gen ligo_authz -w whitelist`; then
  echo "Successfully updated LIGO user list."
  query_failed=0
else
  echo "Failed to update LIGO user list but proceeding with update."
fi

set -e
cvmfs_server transaction ligo.osgstorage.org
set +e
trap finish_txn EXIT ERR SIGHUP SIGINT SIGTERM

# For now, publish even on failure - we want to publish partial progress.
# May revisit later.
pub_failed=0
cvmfs_sync_location=$PWD/cvmfs-sync
pushd ~
PYTHONUNBUFFERED=1 $cvmfs_sync_location -n 15 root://srm.unl.edu//user/ligo/frames/O1 /cvmfs/ligo.osgstorage.org/frames/O1
popd

